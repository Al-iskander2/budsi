# Generated by Django 5.1.11 on 2025-09-18 16:59

import budsi_database.models
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("plan", models.CharField(default="lite", max_length=20)),
                ("fiscal_data", models.JSONField(blank=True, default=dict)),
                ("business_data", models.JSONField(blank=True, default=dict)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", budsi_database.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("is_supplier", models.BooleanField(default=False)),
                ("is_client", models.BooleanField(default=False)),
                ("is_favorite", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FiscalConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                ("config", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fiscal_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FiscalProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("legal_name", models.CharField(blank=True, max_length=200)),
                ("business_name", models.CharField(blank=True, max_length=200)),
                ("business_type", models.CharField(blank=True, max_length=50)),
                ("profession", models.CharField(blank=True, max_length=100)),
                ("sector", models.CharField(blank=True, max_length=100)),
                ("contact_full_name", models.CharField(blank=True, max_length=200)),
                ("phone", models.CharField(blank=True, max_length=30)),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=budsi_database.models.logo_upload_to,
                    ),
                ),
                ("vat_registered", models.BooleanField(default=False)),
                ("vat_number", models.CharField(blank=True, max_length=32)),
                ("pps_number", models.CharField(blank=True, max_length=16)),
                ("tax_country", models.CharField(default="IE", max_length=2)),
                ("tax_region", models.CharField(blank=True, max_length=50)),
                ("addr_line1", models.CharField(blank=True, max_length=200)),
                ("addr_line2", models.CharField(blank=True, max_length=200)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("county", models.CharField(blank=True, max_length=100)),
                ("eircode", models.CharField(blank=True, max_length=10)),
                ("country", models.CharField(default="IE", max_length=2)),
                ("currency", models.CharField(default="EUR", max_length=3)),
                ("payment_terms", models.CharField(blank=True, max_length=100)),
                ("invoice_defaults", models.BooleanField(default=True)),
                ("late_notice", models.TextField(blank=True)),
                ("payment_methods", models.TextField(blank=True)),
                (
                    "accounting_method",
                    models.CharField(default="invoice", max_length=16),
                ),
                ("vat_schemes", models.JSONField(blank=True, default=dict)),
                ("period_type", models.CharField(default="monthly", max_length=10)),
                ("fiscal_year_start", models.DateField(blank=True, null=True)),
                ("reminders_enabled", models.BooleanField(default=True)),
                ("reminder_days_before_due", models.PositiveIntegerField(default=7)),
                ("iban", models.CharField(blank=True, max_length=34)),
                ("bic", models.CharField(blank=True, max_length=11)),
                ("invoice_footer", models.TextField(blank=True)),
                ("auto_detect_contacts", models.BooleanField(default=True)),
                (
                    "ocr_confidence_threshold",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.70"), max_digits=4
                    ),
                ),
                ("tax_bands", models.JSONField(blank=True, default=dict)),
                ("invoice_count", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fiscal_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[("sale", "Sale"), ("purchase", "Purchase")],
                        default="sale",
                        max_length=10,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=64)),
                ("date", models.DateField()),
                ("description", models.CharField(blank=True, max_length=255)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("currency", models.CharField(default="EUR", max_length=3)),
                ("status", models.CharField(default="draft", max_length=20)),
                ("is_confirmed", models.BooleanField(default=False)),
                ("ocr_data", models.JSONField(blank=True, default=dict)),
                (
                    "original_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=budsi_database.models.invoice_upload_to,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="invoices",
                        to="budsi_database.contact",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InvoiceLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=200)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.00"), max_digits=10
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "vat_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("23.00"), max_digits=5
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="budsi_database.invoice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        max_length=10,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("status", models.CharField(default="draft", max_length=20)),
                ("tax_data", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tax_periods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["user", "name"], name="budsi_datab_user_id_99baef_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="contact",
            unique_together={("user", "tax_id")},
        ),
        migrations.AlterUniqueTogether(
            name="fiscalconfig",
            unique_together={("user", "year")},
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["user", "date"], name="budsi_datab_user_id_50ed51_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["user", "status"], name="budsi_datab_user_id_f51505_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="invoice",
            unique_together={("user", "invoice_number")},
        ),
        migrations.AddIndex(
            model_name="taxperiod",
            index=models.Index(
                fields=["user", "start_date", "end_date"],
                name="budsi_datab_user_id_bdf3c9_idx",
            ),
        ),
    ]
